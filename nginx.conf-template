# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
#    include /etc/nginx/nginx.conf.vlad;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root /var/www/html/<my_site_name>/web;
        index index.html index.htm index.nginx-debian.html index.php;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt { log_not_found off; access_log off; allow all; }

    location @rewrite {
      rewrite ^/(.*)$ /index.php?q=$1;
    }

    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }

    location ~ \.php$ {
       try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        client_max_body_size 100M;
    }

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}



#server {
#    server_name vlad.com;
#    root /var/www/html/<my_site_name>/web;
#
#    location = /favicon.ico {
#        log_not_found off;
#        access_log off;
#    }
#
#    location = /robots.txt {
#        allow all;
#        log_not_found off;
#        access_log off;
#    }
#
#    # Very rarely should these ever be accessed outside of your lan
#    location ~* \.(txt|log)$ {
#        allow 192.168.0.0/16;
#        deny all;
#    }
#
#    location ~ \..*/.*\.php$ {
#        return 403;
#    }
#
#    location ~ ^/sites/.*/private/ {
#        return 403;
#    }
#
#    # Block access to scripts in site files directory
#    location ~ ^/sites/[^/]+/files/.*\.php$ {
#        deny all;
#    }
#
#    # Allow "Well-Known URIs" as per RFC 5785
#    location ~* ^/.well-known/ {
#        allow all;
#    }
#
#    # Block access to "hidden" files and directories whose names begin with a
#    # period. This includes directories used by version control systems such
#    # as Subversion or Git to store control files.
#    location ~ (^|/)\. {
#        return 403;
#    }
#
#    location / {
#        # try_files $uri @rewrite; # For Drupal <= 6
#        try_files $uri /index.php?$query_string; # For Drupal >= 7
#    }
#
#    location @rewrite {
#        #rewrite ^/(.*)$ /index.php?q=$1; # For Drupal <= 6
#        rewrite ^ /index.php; # For Drupal >= 7
#    }
#
#    # Don't allow direct access to PHP files in the vendor directory.
#    location ~ /vendor/.*\.php$ {
#        deny all;
#        return 404;
#    }
#
#    # Protect files and directories from prying eyes.
#    location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
#        deny all;
#        return 404;
#    }
#
#    # In Drupal 8, we must also match new paths where the '.php' appears in
#    # the middle, such as update.php/selection. The rule we use is strict,
#    # and only allows this pattern with the update.php front controller.
#    # This allows legacy path aliases in the form of
#    # blog/index.php/legacy-path to continue to route to Drupal nodes. If
#    # you do not have any paths like that, then you might prefer to use a
#    # laxer rule, such as:
#    #   location ~ \.php(/|$) {
#    # The laxer rule will continue to work if Drupal uses this new URL
#    # pattern with front controllers other than update.php in a future
#    # release.
#    location ~ '\.php$|^/update.php' {
#        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
#        # Ensure the php file exists. Mitigates CVE-2019-11043
#        try_files $fastcgi_script_name =404;
#        # Security note: If you're running a version of PHP older than the
#        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
#        # See http://serverfault.com/q/627903/94922 for details.
#        include fastcgi_params;
#        # Block httpoxy attacks. See https://httpoxy.org/.
#        fastcgi_param HTTP_PROXY "";
#        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#        fastcgi_param PATH_INFO $fastcgi_path_info;
#        fastcgi_param QUERY_STRING $query_string;
#        fastcgi_intercept_errors on;
#        # PHP 5 socket location.
#        #fastcgi_pass unix:/var/run/php5-fpm.sock;
#        # PHP 7 socket location.
#        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
#    }
#
#    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
#        try_files $uri @rewrite;
#        expires max;
#        log_not_found off;
#    }
#
#    # Fighting with Styles? This little gem is amazing.
#    # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
#    location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
#        try_files $uri @rewrite;
#    }
#
#    # Handle private files through Drupal. Private file's path can come
#    # with a language prefix.
#    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
#        try_files $uri /index.php?$query_string;
#    }
#
#    # Enforce clean URLs
#    # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
#    # Could be done with 301 for permanent or other redirect codes.
#    if ($request_uri ~* "^(.*/)index\.php/(.*)") {
#        return 307 $1$2;
#    }
#}